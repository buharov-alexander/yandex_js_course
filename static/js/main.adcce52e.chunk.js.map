{"version":3,"sources":["resources/tasks.yaml","resources/users.yaml","app/actions/actionTypes.js","app/store/usersReducer.js","app/store/tasksReducer.js","app/tabs/constants.js","app/table/constants.js","app/store/uiReducer.js","app/store/rootReducer.js","app/store/configureStore.js","app/tabs/ResultTabs.js","app/actions/tasksActions.js","app/actions/usersActions.js","app/actions/dataActions.js","app/table/Row.js","app/table/Table.js","app/page/ResultContainer.js","app/page/Page.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","LOAD_USERS","LOAD_TASKS","LOAD_USER_TASKS","CHANGE_TAB","CHANGE_SORTING","initialState","users","Map","weeks","List","tasks","COLUMN","NAME","SUM","DIRECTION","ASC","DESC","tab","sortBy","direction","revert","combineReducers","state","action","type","payload","map","user","Object","assign","set","ui","column","configureStore","createStore","rootReducer","compose","applyMiddleware","thunk","useStyles","makeStyles","appBar","backgroundColor","connect","dispatch","actions","changeTab","event","classes","AppBar","className","position","Tabs","value","onChange","Tab","label","loadTasks","fetch","tasksFile","then","response","text","yaml","safeLoad","weekTasks","index","name","reduce","acc","week","task","weekIndex","concat","getTasksFromWeeks","result","loadTasksForUser","username","json","completedTasks","data","results","find","ct","loadUsers","loadedUsers","loadData","Promise","all","cell","padding","textAlign","notStarted","partially","completed","Row","TableRow","TableCell","component","scope","displayName","renderName","completedCount","allCount","completedWeekCount","size","allWeekCount","cellClass","key","renderResults","weekResults","get","TaskTable","sortLabel","props","TableSortLabel","active","onClick","changeSorting","getResults","entrySeq","toList","allResults","filter","res","isLoading","taskRes","resultComparator","dir","a","b","localeCompare","aCompleted","bCompleted","this","sort","Paper","root","Table","table","TableHead","align","TableBody","userResult","PureComponent","withStyles","width","marginTop","overflowX","border","ResultContainer","theme","title","spacing","Page","Container","maxWidth","Typography","variant","paragraph","store","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.adcce52e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tasks.0670676d.yaml\";","module.exports = __webpack_public_path__ + \"static/media/users.d1d8527d.yaml\";","export const LOAD_USERS = 'LOAD_USERS';\nexport const LOAD_TASKS = 'LOAD_TASKS';\nexport const LOAD_USER_TASKS = 'LOAD_USER_TASKS';\n\nexport const CHANGE_TAB = 'CHANGE_TAB';\nexport const CHANGE_SORTING = 'CHANGE_SORTING';\n","import { Map } from 'immutable';\n\nimport {\n  LOAD_USERS,\n  LOAD_USER_TASKS,\n} from 'app/actions/actionTypes';\n\nconst initialState = {\n  users: new Map(),\n};\n\nexport default function usersReducer(state = initialState, action) {\n  switch (action.type) {\n    case LOAD_USERS: {\n      const users = new Map(action.payload.map(user => [user, null]));\n      return Object.assign({}, state, { users });\n    }\n    case LOAD_USER_TASKS: {\n      const users = state.users.set(action.payload.user, action.payload.tasks);\n      return Object.assign({}, state, { users });\n    }\n    default:\n      return state;\n  }\n}\n","import { List } from 'immutable';\n\nimport {\n  LOAD_TASKS,\n} from 'app/actions/actionTypes';\n\nconst initialState = {\n  weeks: new List(),\n  tasks: new List(),\n};\n\nexport default function tasksReducer(state = initialState, action) {\n  switch (action.type) {\n    case LOAD_TASKS: {\n      return Object.assign({}, state, action.payload);\n    }\n    default:\n      return state;\n  }\n}\n","export const ALL = 'ALL';\nexport const WEEK = 'WEEK';\n","export const COLUMN = {\n  NAME: 'Name',\n  SUM: 'Sum',\n};\n\nexport const DIRECTION = {\n  ASC: 'asc',\n  DESC: 'desc',\n};\n","\nimport { CHANGE_TAB, CHANGE_SORTING } from 'app/actions/actionTypes';\nimport { ALL } from 'app/tabs/constants';\nimport { COLUMN, DIRECTION } from 'app/table/constants';\n\nconst initialState = {\n  tab: ALL,\n  sortBy: COLUMN.SUM,\n  direction: DIRECTION.DESC,\n};\n\nconst revert = direction => (direction === DIRECTION.DESC ? DIRECTION.ASC : DIRECTION.DESC);\n\nexport default function uiReducer(state = initialState, action) {\n  switch (action.type) {\n    case CHANGE_TAB: {\n      return Object.assign({}, state, action.payload);\n    }\n    case CHANGE_SORTING: {\n      const sortBy = action.payload.column;\n      const direction = state.sortBy === sortBy ? revert(state.direction) : DIRECTION.DESC;\n      return Object.assign({}, state, { sortBy, direction });\n    }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\n\nimport usersReducer from './usersReducer';\nimport tasksReducer from './tasksReducer';\nimport uiReducer from './uiReducer';\n\nexport default combineReducers({\n  users: usersReducer,\n  tasks: tasksReducer,\n  ui: uiReducer,\n});\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from './rootReducer';\n\nconst configureStore = () => createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(\n      thunk,\n    ),\n    // eslint-disable-next-line no-undef, no-underscore-dangle\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n  ),\n);\n\nexport default configureStore;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport { CHANGE_TAB } from 'app/actions/actionTypes';\nimport { ALL } from './constants';\n\nconst useStyles = makeStyles(() => ({\n  appBar: {\n    backgroundColor: '#333',\n  },\n}));\n\nconst ResultTabs = ({ tab, actions }) => {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <AppBar className={classes.appBar} position=\"static\">\n        <Tabs value={tab} onChange={actions.changeTab}>\n          <Tab value={ALL} label=\"All Weeks\" />\n        </Tabs>\n      </AppBar>\n    </div>\n  );\n};\n\nResultTabs.propTypes = {\n  tab: PropTypes.string.isRequired,\n  actions: PropTypes.shape({\n    changeTab: PropTypes.func,\n  }).isRequired,\n};\n\nfunction mapStateToProps(state) {\n  return {\n    tab: state.ui.tab,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: {\n      changeTab: (event, tab) => dispatch({ type: CHANGE_TAB, payload: { tab } }),\n    },\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultTabs);\n","import { List } from 'immutable';\nimport yaml from 'js-yaml';\nimport tasksFile from 'resources/tasks.yaml';\n\nimport {\n  LOAD_TASKS,\n} from './actionTypes';\n\nconst parseTasksFile = text => new List(\n  yaml.safeLoad(text)\n    .map((weekTasks, index) => ({ name: `Week ${index + 1}`, tasks: new List(weekTasks), index })),\n);\n\nconst getTasksFromWeeks = weeks => weeks.reduce((acc, week) => {\n  const weekTasks = week.tasks.map(task => ({ name: task, weekIndex: week.index }));\n  return acc.concat(weekTasks);\n}, new List());\n\nconst loadTasks = dispatch => fetch(tasksFile)\n  .then(response => response.text())\n  .then((response) => {\n    const weeks = parseTasksFile(response);\n    const tasks = getTasksFromWeeks(weeks);\n\n    const result = { weeks, tasks };\n    dispatch({ type: LOAD_TASKS, payload: result });\n    return result;\n  });\n\n\nexport default loadTasks;\n","import yaml from 'js-yaml';\nimport users from 'resources/users.yaml';\n\nimport {\n  LOAD_USERS,\n  LOAD_USER_TASKS,\n} from './actionTypes';\n\nexport const loadTasksForUser = (user, tasks) => (dispatch) => {\n  fetch(`https://j3300l2mej.execute-api.eu-west-1.amazonaws.com/dev/${user.username}`)\n    .then(response => response.json())\n    .then((response) => {\n      const completedTasks = response.data;\n      const results = tasks.map(task => ({ result: completedTasks.find(ct => ct.name === task.name), ...task }));\n\n      dispatch({ type: LOAD_USER_TASKS, payload: { user, tasks: results } });\n    });\n};\n\nexport const loadUsers = dispatch => fetch(users)\n  .then(response => response.text())\n  .then((response) => {\n    const loadedUsers = yaml.safeLoad(response);\n    dispatch({ type: LOAD_USERS, payload: loadedUsers });\n    return loadedUsers;\n  });\n","import loadTasks from './tasksActions';\nimport { loadUsers, loadTasksForUser } from './usersActions';\n\nconst loadData = () => (dispatch) => {\n  Promise.all([loadTasks(dispatch), loadUsers(dispatch)])\n    .then(([{ tasks }, users]) => {\n      users.map(user => dispatch(loadTasksForUser(user, tasks)));\n    });\n};\n\nexport default loadData;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\n\nconst useStyles = makeStyles(() => ({\n  cell: {\n    padding: '15px',\n    textAlign: 'center',\n  },\n  notStarted: {\n    backgroundColor: '#FFFFFF',\n  },\n  partially: {\n    backgroundColor: '#f7a531',\n  },\n  completed: {\n    backgroundColor: '#8acc47',\n  },\n}));\n\nconst renderResults = (results, week, classes) => {\n  const completedWeekCount = results.size;\n  const allWeekCount = week.tasks.size;\n  let cellClass = classes.partially;\n  let result = `${completedWeekCount}/${allWeekCount}`;\n  if (completedWeekCount === 0) {\n    cellClass = classes.notStarted;\n    result = 0;\n  } else if (completedWeekCount === allWeekCount) {\n    cellClass = classes.completed;\n    result = completedWeekCount;\n  }\n\n  return (\n    <TableCell className={`${cellClass} ${classes.cell}`} key={week.name}>\n      {`${result}`}\n    </TableCell>\n  );\n};\n\nconst renderName = (user) => (\n  <div>\n    <b>{user.displayName}</b>\n    <br />\n    {user.username}\n  </div>\n);\n\nconst Row = ({ user, results, weeks }) => {\n  const classes = useStyles();\n\n  return (\n    <TableRow>\n      <TableCell component=\"th\" scope=\"row\">\n        {renderName(user)}\n      </TableCell>\n      <TableCell component=\"th\" scope=\"row\">\n        {`${results.completedCount}/${results.allCount}`}\n      </TableCell>\n      {weeks.map(week => renderResults(results.weekResults.get(week), week, classes))}\n    </TableRow>\n  );\n};\n\nRow.propTypes = {\n  user: PropTypes.objectOf(PropTypes.string),\n  weeks: ImmutablePropTypes.list.isRequired,\n  results: PropTypes.shape({\n    completedCount: PropTypes.number,\n    allCount: PropTypes.number,\n    weekResults: ImmutablePropTypes.map,\n  }).isRequired,\n};\n\nexport default Row;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { List, Map } from 'immutable';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\n\nimport Row from './Row';\nimport { COLUMN, DIRECTION } from './constants';\n\n\nconst styles = {\n  root: {\n    width: '100%',\n    marginTop: '1rem',\n    overflowX: 'auto',\n  },\n  cell: {\n    border: '1px solid black',\n    padding: '5px',\n  },\n};\n\nclass TaskTable extends PureComponent {\n  static propTypes = {\n    actions: PropTypes.shape({\n      changeSorting: PropTypes.func,\n    }).isRequired,\n    users: ImmutablePropTypes.map.isRequired,\n    weeks: ImmutablePropTypes.list.isRequired,\n    direction: PropTypes.string,\n    sortBy: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    classes: PropTypes.objectOf(PropTypes.string),\n  };\n\n  sortLabel = (label, column) => {\n    const { sortBy, direction, actions } = this.props;\n    return (\n      <TableSortLabel\n        active={column === sortBy}\n        direction={direction}\n        onClick={() => actions.changeSorting(column)}\n      >\n        {label}\n      </TableSortLabel>\n    );\n  }\n\n  getResults = (weeks, users) => users.entrySeq().toList()\n    .map(([user, results]) => {\n      const allResults = results || new List();\n      const weekResults = weeks.reduce(\n        (acc, week) => acc.set(week, allResults.filter(res => res.weekIndex === week.index && res.result)),\n        new Map(),\n      );\n      return {\n        user,\n        isLoading: !results,\n        completedCount: allResults.filter(taskRes => taskRes.result).size,\n        allCount: allResults.size,\n        weekResults,\n      };\n    });\n\n  resultComparator = () => {\n    const { sortBy, direction } = this.props;\n    const dir = direction === DIRECTION.ASC ? 1 : -1;\n    switch (sortBy) {\n      case COLUMN.NAME:\n        return (a, b) => dir * a.user.displayName.localeCompare(b.user.displayName);\n      case COLUMN.SUM:\n        return (a, b) => dir * (a.completedCount - b.completedCount);\n      default:\n        return (a, b) => {\n          const aCompleted = a.weekResults.get(sortBy).size;\n          const bCompleted = b.weekResults.get(sortBy).size;\n          return dir * (aCompleted - bCompleted);\n        };\n    }\n  };\n\n  render() {\n    const { users, weeks, classes } = this.props;\n\n    const results = this.getResults(weeks, users).sort(this.resultComparator());\n    return (\n      <Paper className={classes.root}>\n        <Table className={classes.table}>\n          <TableHead>\n            <TableRow>\n              <TableCell className={classes.cell}>\n                {this.sortLabel(COLUMN.NAME, COLUMN.NAME)}\n              </TableCell>\n              <TableCell className={classes.cell}>\n                {this.sortLabel(COLUMN.SUM, COLUMN.SUM)}\n              </TableCell>\n              {weeks.map(week => (\n                <TableCell className={classes.cell} key={week.name} align=\"center\">\n                  {this.sortLabel(week.name, week)}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {results.map(userResult => (\n              <Row\n                key={userResult.user.username}\n                user={userResult.user}\n                results={userResult}\n                weeks={weeks}\n              />\n            ))}\n          </TableBody>\n        </Table>\n      </Paper>\n    );\n  }\n}\n\nexport default withStyles(styles)(TaskTable);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport loadData from 'app/actions/dataActions';\nimport Table from 'app/table/Table';\nimport { CHANGE_SORTING } from 'app/actions/actionTypes';\n\nclass ResultContainer extends PureComponent {\n  static propTypes = {\n    actions: PropTypes.shape({\n      loadData: PropTypes.func,\n    }).isRequired,\n  }\n\n  constructor(props) {\n    super(props);\n    props.actions.loadData();\n  }\n\n  render() {\n    return <Table {...this.props} />;\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    users: state.users.users,\n    weeks: state.tasks.weeks,\n    tasks: state.tasks.tasks,\n    tab: state.ui.tab,\n    sortBy: state.ui.sortBy,\n    direction: state.ui.direction,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: {\n      loadData: () => dispatch(loadData()),\n      changeSorting: column => dispatch({ type: CHANGE_SORTING, payload: { column } }),\n    },\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultContainer);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\n\nimport ResultTabs from '../tabs/ResultTabs';\nimport ResultContainer from './ResultContainer';\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function Page() {\n  const classes = useStyles();\n\n  return (\n    <Container maxWidth=\"xl\">\n      <Typography className={classes.title} variant=\"h3\" paragraph>\n        Yandex JS course 2019\n      </Typography>\n      <ResultTabs />\n      <ResultContainer />\n    </Container>\n  );\n}\n","\nimport React from 'react';\nimport { Provider } from 'react-redux';\n\nimport './App.css';\nimport configureStore from 'app/store/configureStore';\nimport Page from 'app/page/Page';\n\nconst store = configureStore();\n\nconst App = () => (\n  <Provider store={store}>\n    <Page />\n  </Provider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}